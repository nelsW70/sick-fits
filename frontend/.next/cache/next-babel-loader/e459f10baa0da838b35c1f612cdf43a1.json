{"ast":null,"code":"import { PAGINATION_QUERY } from '../components/Paginations';\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n    // tells apollo we will take care of everything\n    read: function read() {\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _ref = arguments.length > 1 ? arguments[1] : undefined,\n          args = _ref.args,\n          cache = _ref.cache;\n\n      console.log({\n        existing: existing,\n        args: args,\n        cache: cache\n      });\n      var skip = args.skip,\n          first = args.first; // read the number of items on the page from the cache\n\n      var data = cache.readQuery({\n        query: PAGINATION_QUERY\n      }); // first thing it does is ask the read function for those items\n      // we can either one of two things\n      // first thing we can do is return the items because they are already in the cache\n      // the other thing we can do is to return false from here, (network request)\n    },\n    merge: function merge() {// this runs when the apollo client comes back from the network with products\n    }\n  };\n}","map":{"version":3,"sources":["/Users/nelsonwfoltz/Desktop/sick-fits/frontend/lib/paginationField.js"],"names":["PAGINATION_QUERY","paginationField","keyArgs","read","existing","args","cache","console","log","skip","first","data","readQuery","query","merge"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,2BAAjC;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,OAAO,EAAE,KADJ;AACW;AAChBC,IAAAA,IAFK,kBAEgC;AAAA,UAAhCC,QAAgC,uEAArB,EAAqB;;AAAA;AAAA,UAAfC,IAAe,QAAfA,IAAe;AAAA,UAATC,KAAS,QAATA,KAAS;;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,QAAAA,QAAQ,EAARA,QAAF;AAAYC,QAAAA,IAAI,EAAJA,IAAZ;AAAkBC,QAAAA,KAAK,EAALA;AAAlB,OAAZ;AADmC,UAE3BG,IAF2B,GAEXJ,IAFW,CAE3BI,IAF2B;AAAA,UAErBC,KAFqB,GAEXL,IAFW,CAErBK,KAFqB,EAInC;;AACA,UAAMC,IAAI,GAAGL,KAAK,CAACM,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEb;AAAT,OAAhB,CAAb,CALmC,CAMnC;AAEA;AAEA;AAEA;AACD,KAfI;AAgBLc,IAAAA,KAhBK,mBAgBG,CACN;AACD;AAlBI,GAAP;AAoBD","sourcesContent":["import { PAGINATION_QUERY } from '../components/Paginations';\n\nexport default function paginationField() {\n  return {\n    keyArgs: false, // tells apollo we will take care of everything\n    read(existing = [], { args, cache }) {\n      console.log({ existing, args, cache });\n      const { skip, first } = args;\n\n      // read the number of items on the page from the cache\n      const data = cache.readQuery({ query: PAGINATION_QUERY });\n      // first thing it does is ask the read function for those items\n\n      // we can either one of two things\n\n      // first thing we can do is return the items because they are already in the cache\n\n      // the other thing we can do is to return false from here, (network request)\n    },\n    merge() {\n      // this runs when the apollo client comes back from the network with products\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}